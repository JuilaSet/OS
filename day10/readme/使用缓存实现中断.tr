/*
 * 使用缓存实现中断
 */
#def [text~]
====================
* 思想: 把键盘发送的扫描码和断码数值缓存起来, 把控制器交换给原来任务, 等到CPU稍微空闲时再处理键盘事件

* 为键盘中断设置一个缓冲区: 存入缓冲区的操作要比输出到显示器快的多, 可以大大减少中断处理时间
[code] |<
struct KEYBUF {
    unsigned char key_buf[32];
    int next_r;		// 指向下一个读取位置
    int next_w;		// 指向下一个写入位置
    int len;		// 总长度
};

struct KEYBUF keybuf;
>| [uncode]
====================
